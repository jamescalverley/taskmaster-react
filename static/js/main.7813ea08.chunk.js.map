{"version":3,"sources":["components/Header.js","components/SideNav.js","components/Draggable.js","components/TextArea.js","components/Card.js","components/Column.js","components/ColumnTitle.js","components/ProjectDashboard.js","components/SettingsPage.js","components/MyTasksPage.js","App.js","index.js"],"names":["Header","className","SideNav","to","Draggable","props","id","draggable","onDragStart","e","dataTransfer","setData","target","onDragOver","stopPropagation","style","onBlur","saveCard","cardid","colIndex","index","onClick","deleteCard","class","children","TextArea","useState","value","setValue","type","onChange","placeholder","Card","console","log","title","Column","cards","deleteColumn","colTitle","addCard","map","element","Math","random","toString","margin","text","dueDate","duedate","description","columnid","colid","ColumnTitle","setTitle","updateColumnTitle","ProjectDashboard","user","setUser","columnStyle","backgroundColor","width","dashboards","columns","splice","columnIndex","newCard","lables","asignee","push","cardIndex","document","getElementById","date","updatedCard","name","colName","newColumn","length","SettingsPage","MyTasksPage","App","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7813ea08.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(){\n\n  return(\n    <div className=\"header\">\n      <div className=\"header-body\">\n       <div className=\"row\">\n        <div className=\"taskmaster-logo col-3\">\n          <h2>TaskMaster</h2>\n        </div>\n        <div className=\"header-project-title col-3\">\n          <h2>Project X</h2>\n        </div>\n        <div className=\"header-team-members col-6\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <h4>team members</h4>\n            </div>\n            <div className=\"col-6\">\n              <button className=\"btn btn-primary\">Invite</button>\n            </div>\n          </div>\n          \n          \n        </div>\n        \n      </div>\n     </div>\n    </div>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction SideNav(){\n\n  return(\n    <div className=\"sideNav\">\n      \n      <div className=\"icon-project-dashboard\">\n        <Link to=\"/projectdashboard\">Project</Link>\n      </div>\n      <div className=\"icon-mytasks\">\n        <Link to=\"/mytasks\" className=\"sidebar-icon\">My Tasks</Link>\n      </div>\n      <div className=\"icon-settings\">\n        <Link to=\"/settings\" className=\"sidebar-icon\">Settings</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default SideNav;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Draggable(props) {\n    function drag(e) {\n        e.dataTransfer.setData('transfer', e.target.id);\n    }\n\n    function noAllowDrop(e) {\n        e.stopPropagation();\n    }\n    return (\n        <div\n            id={props.id}\n            draggable=\"true\"\n            onDragStart={drag}\n            onDragOver={noAllowDrop}\n            style={props.style}\n            onBlur={() =>\n                props.saveCard(props.cardid, props.colIndex, props.index)\n            }\n        >\n            <button\n                onClick={() => props.deleteCard(props.colIndex, props.index)}\n            >\n                <i class=\"far fa-trash-alt\"></i>\n            </button>\n            {/* <button\n                onClick={() =>\n                    props.saveCard(props.cardid, props.colIndex, props.index)\n                }\n            >\n                <i class=\"far fa-save\"></i>\n            </button> */}\n\n            {props.children}\n        </div>\n    );\n}\n\nDraggable.propTypes = {\n    id: PropTypes.string,\n    style: PropTypes.object,\n    children: PropTypes.node,\n};\n\nexport default Draggable;\n","import React, { useState } from 'react';\n\nfunction TextArea(props) {\n    const [value, setValue] = useState(props.value);\n    function handleInputChange(e) {\n        setValue(e.target.value);\n    }\n    return (\n      <form>\n        <div className=\"form-row align-items-center\">\n          <div className=\"col-auto\">\n            <input \n              type=\"text\" \n              className=\"form-control mb-2\" \n              id={props.id}\n              onChange={handleInputChange} \n              value={value} \n              placeholder={props.placeholder}\n            />\n          </div>\n        </div>\n      </form>\n    );\n}\n\nexport default TextArea;","import React from 'react';\nimport '../components-style.css';\nimport TextArea from './TextArea';\n\nfunction Card(props){\n  console.log('logging props passed to Card', props);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-utility-header\">\n        <button type=\"button\" className=\"btn-sm btn-outline-secondary\"\n          onClick={() => props.deleteCard(props.colIndex, props.index)}\n        >\n          <i class=\"far fa-trash-alt\"></i>\n        </button>\n      </div>\n      <div className=\"card-header\">\n      <TextArea\n        id={'title' + props.cardid}\n        value={props.title}\n        placeholder=\"Title\"\n      />\n      </div>\n    </div>\n  )\n}\n\nexport default Card;","import React, {useState} from 'react';\nimport '../components-style.css';\nimport PropTypes from 'prop-types';\nimport Draggable from './Draggable';\nimport Card from './Card';\n\n\nfunction Column(props){\n  const [cards, setCard] = useState(props.cards ? props.cards : []);\n  \n  function drop(e) {\n    e.preventDefault();\n    const data = e.dataTransfer.getData('transfer');\n    console.log(data);\n    // console.log(document.getElementById('abc'));\n    let toDrop = document.getElementById(data);\n    e.target.appendChild(toDrop);\n    console.log('dropped element', document.getElementById(data));\n    // document.removeChild(document.getElementById(data));\n    let element = document.getElementById(data);\n    element.parentNode.removeChild(element);\n    console.log('something dropped on me!');\n    addCard();\n    let col = document.getElementById('qaz');\n    console.log(col.childNodes);\n    console.log(col.childNodes[2].childNodes.length);\n    // addCard();\n}\n\nfunction allowDrop(e) {\n    e.preventDefault();\n}\n\nfunction addCard() {\n    cards.push({ title: 'new card', duedate: Date.now() });\n    setCard([...cards]);\n}\n\n// function deleteCard(e) {\n//     console.log('delete card clicked', e.target);\n// }\nfunction dragEnd() {\n    console.log('drag ended');\n}\n\n  return(\n    <div className=\"project-column\" id={props.id}>\n      <div className=\"column-header\">\n      <button\n        type=\"button\"\n        className=\"btn-sm btn-dark\"\n        onClick={() => props.deleteColumn(props.colIndex)}\n      >\n        <i class=\"far fa-trash-alt\"></i>\n      </button>\n      </div>   \n      {props.colTitle}\n      <button\n        type=\"button\" \n        className=\"btn-sm btn-dark\"\n        onClick={() => props.addCard(props.colIndex)}>\n        Add Card +\n      </button>\n\n      {cards.map((element, index) => {\n        let value = Math.random().toString();\n        return (\n          <Draggable\n            id={value}\n            style={{ margin: '8px' }}\n            index={index}\n            colIndex={props.colIndex}\n            deleteCard={props.deleteCard}\n            cardid={element.cardid}\n            saveCard={props.saveCard}\n          >\n              <Card\n                text={value}\n                title={element.title}\n                dueDate={element.duedate}\n                description={element.description}\n                cardid={element.cardid}\n                columnid={props.colid}\n                deleteCard={props.deleteCard}\n              />\n          </Draggable>\n           \n        );\n      })}\n      \n      {props.children} \n    </div>  \n    \n  )\n}\n\nColumn.propTypes = {\n  id: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.node,\n};\n\nexport default Column;","import React, { useState } from 'react';\n\nfunction ColumnTitle(props) {\n    const [title, setTitle] = useState(props.title);\n    \n    function handleInputChange(e) {\n        setTitle(e.target.value);\n    }\n    return (\n      <form>\n        <div className=\"form-row align-items-center\">\n          <div className=\"col-auto\">\n            <input \n              type=\"text\" \n              className=\"form-control mb-2\" \n              id={props.id}\n              onChange={handleInputChange} \n              value={title} \n              placeholder=\"Add column title\"\n              onBlur={() => props.updateColumnTitle(props.index, title)}\n            />\n          </div>\n        </div>\n      </form>\n    );\n}\nexport default ColumnTitle;","import React, {useState} from 'react';\nimport '../components-style.css';\nimport Column from './Column';\nimport ColumnTitle from './ColumnTitle';\n\nfunction ProjectDashboard(props){\n  const [ user, setUser ] = useState({\n    // \"_id\" : ObjectId(\"5e9228b0f38fc24318e8f2c2\"),\n    \"id\": \"1234\",\n    \"email\" : \"user@user.com\",\n    \"name\" : \"\",\n    \"password\" : \"password_hash\",\n    \"user_settings\" : {\n            \"theme\" : \"light\",\n            \"profilePicUrl\" : \"url\"\n    },\n    \"dashboards\" : [\n            {\n                    \"name\" : \"Dashboard 1\",\n                    \"columns\" : [\n                            {\n                                    \"name\" : \"TO-DO\",\n                                    \"columnid\" : 1,\n                                    \"cards\" : [\n                                            {\n                                                    \"title\" : \"this is my task title\",\n                                                    \"cardid\" : 0.4786195689500974,\n                                                    \"duedate\" : \"2020-04-15\",\n                                                    \"lables\" : [\n                                                            \"Important\",\n                                                            \"Medium\",\n                                                            \"Low\"\n                                                    ],\n                                                    \"description\" : \"this is my task description\",\n                                                    \"asignee\" : [\n                                                            \"\"\n                                                    ]\n                                            },\n                                            {\n                                                    \"title\" : \"task 2\",\n                                                    \"cardid\" : 0.20808197223570835,\n                                                    \"duedate\" : \"2020-04-24\",\n                                                    \"lables\" : [\n                                                            \"Important\",\n                                                            \"Medium\",\n                                                            \"Low\"\n                                                    ],\n                                                    \"description\" : \"task 2\",\n                                                    \"asignee\" : [\n                                                            \"\"\n                                                    ]\n                                            },\n                                            {\n                                                    \"title\" : \"task\",\n                                                    \"cardid\" : 0.44847083838515456,\n                                                    \"duedate\" : \"\",\n                                                    \"lables\" : [\n                                                            \"Important\",\n                                                            \"Medium\",\n                                                            \"Low\"\n                                                    ],\n                                                    \"description\" : \"\",\n                                                    \"asignee\" : [\n                                                            \"\"\n                                                    ]\n                                            }\n                                    ]\n                            },\n                            {\n                                    \"name\" : \"\",\n                                    \"columnid\" : 2,\n                                    \"cards\" : [\n                                            {\n                                                    \"title\" : \"something here\",\n                                                    \"cardid\" : 0.6507429514812203,\n                                                    \"duedate\" : \"2020-04-15\",\n                                                    \"lables\" : [\n                                                            \"Important\",\n                                                            \"Medium\",\n                                                            \"Low\"\n                                                    ],\n                                                    \"description\" : \"someting there\",\n                                                    \"asignee\" : [\n                                                            \"\"\n                                                    ]\n                                            }\n                                    ]\n                            },\n                            {\n                                    \"name\" : \"\",\n                                    \"columnid\" : 3,\n                                    \"cards\" : [\n                                            {\n                                                    \"title\" : \"my new task\",\n                                                    \"cardid\" : 0.7468101560284077,\n                                                    \"duedate\" : \"2020-04-12\",\n                                                    \"lables\" : [\n                                                            \"Important\",\n                                                            \"Medium\",\n                                                            \"Low\"\n                                                    ],\n                                                    \"description\" : \"to do my homework\",\n                                                    \"asignee\" : [\n                                                            \"\"\n                                                    ]\n                                            }\n                                    ]\n                            }\n                    ]\n            }\n    ],\n    \"__v\" : 0\n})\n\nconsole.log('[USER]', user)\nconst columnStyle = {\n  backgroundColor: '#555',\n  width: '250px',\n  // height: '400px',\n  margin: '32px',\n};\n\nfunction addColumn() {\nconst newColumn = {\nname: '',\ncolumnid: user.dashboards[0].columns.length + 1,\ncards: [], \n};\n// columns.push(newColumn);\nuser.dashboards[0].columns.push(newColumn);\nsetUser({ ...user });\nconsole.log(\"adding new columm\", newColumn)\n//updateUserProfile(user);\n}\n\nfunction deleteColumn(colIndex) {\n  console.log('function deleteColumn called', colIndex);\n  user.dashboards[0].columns.splice(colIndex, 1);\n  setUser({ ...user });\n  //updateUserProfile(user);\n}\nfunction addCard(columnIndex) {\n  const newCard = {\n      title: '',\n      cardid: Math.random(),\n      duedate: '',\n      lables: ['Important', 'Medium', 'Low'],\n      description: '',\n      asignee: [''],\n  };\n  user.dashboards[0].columns[columnIndex].cards.push(newCard);\n  setUser({ ...user });\n  //updateUserProfile(user);\n}\n\nfunction saveCard(cardid, colIndex, cardIndex) {\n  console.log('function saveCard called', cardid, colIndex, cardIndex);\n  let title = document.getElementById('title' + cardid);\n  console.log('logging card title', title.value);\n  let description = document.getElementById('desc' + cardid);\n  console.log('logging card description', description.value);\n  let date = document.getElementById('date' + cardid);\n  console.log('logging card date', date.value);\n  console.log(title.value, description.value, date.value);\n  const updatedCard = {\n      title: title.value,\n      cardid: cardid,\n      duedate: date.value,\n      lables: ['Important', 'Medium', 'Low'],\n      description: description.value,\n      asignee: [''],\n  };\n  user.dashboards[0].columns[colIndex].cards[cardIndex] = updatedCard;\n  setUser({ ...user });\n  //updateUserProfile(user);\n}\n\nfunction deleteCard(columnIndex, cardIndex) {\n  console.log('function deleteCard called!', columnIndex, cardIndex);\n  user.dashboards[0].columns[columnIndex].cards.splice(cardIndex, 1);\n  setUser({ ...user });\n  //updateUserProfile(user);\n}\nfunction updateColumnTitle(index, title) {\n  console.log('function updateColumnTitle called', index, title);\n  user.dashboards[0].columns[index].name = title;\n  setUser({ ...user });\n  //updateUserProfile(user);\n}\n\n//? vvvvvvvvv uncomment once db is connected vvvvvvvvv\n// async function updateUserProfile(user) {\n//         const url = '/api/updateUserProfile';\n//         const result = await fetch(url, {\n//         method: 'POST',\n//         body: JSON.stringify(user),\n//         headers: {\n//         'Content-Type': 'application/json',\n//         },\n//         }).then((response) => response.json());\n//         console.log(result);\n// }\n\n// async function getUser(email = 'user@user.com') {\n//         const url = `/api/getUser/${email}`;\n//         const result = await fetch(url).then((response) => response.json());\n//         const user = result[0];\n// // console.log(user.dashboards[0].columns);\n// // setColumns([...user.dashboards[0].columns]);\n// setUser({ ...user });\n// }\n\n// useEffect(function () {\n//         getUser();\n// }, []);\n//? ^^^^^^^^ uncomment once db is connected ^^^^^^^\n\n  return(\n    \n    <div id={props.id}>\n    <div className=\"project-column-wrapper\">\n    {user.dashboards[0].columns.map((element, index) => {\n      return (\n        <Column\n                id={Math.random().toString()}\n                style={columnStyle}\n                cards={element.cards}\n                colName={element.name}\n                colid={element.columnid}\n                addCard={addCard}\n                deleteCard={deleteCard}\n                colIndex={index}\n                deleteColumn={deleteColumn}\n                saveCard={saveCard}\n                colTitle={\n                    <ColumnTitle\n                        title={element.name}\n                        index={index}\n                        updateColumnTitle={updateColumnTitle}\n                    />\n                }\n            />\n      )\n    })}\n    <div style={{ margin: '32px' }}>\n    <button type=\"button\" className=\"btn-lg btn-outline-secondary\"onClick={addColumn}>Add column</button>\n    </div>\n    </div>\n\n    </div>\n  );\n};\n\nexport default ProjectDashboard;","import React from 'react';\n\nfunction SettingsPage(){\n\n  return(\n    <>\n      <h1>Settings</h1>\n    </>\n  );\n};\n\nexport default SettingsPage;","import React from 'react';\n\nfunction MyTasksPage(){\n\n  return(\n    <>\n      <h1>My Tasks</h1>\n    </>\n  );\n};\n\nexport default MyTasksPage;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from './components/Header';\nimport SideNav from './components/SideNav';\nimport ProjectDashboard from './components/ProjectDashboard';\nimport SettingsPage from './components/SettingsPage';\nimport MyTasksPage from './components/MyTasksPage';\n\nfunction App() {\n  return (\n    <Router>\n    <Header />\n    <SideNav />\n    <div className=\"main\">\n      <Route exact path=\"/projectdashboard\" component={ProjectDashboard} />\n      <Route exact path=\"/mytasks\" component={MyTasksPage} />\n      <Route exact path=\"/settings\" component={SettingsPage} />\n      \n      \n    </div>  \n    \n    \n   \n    \n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}